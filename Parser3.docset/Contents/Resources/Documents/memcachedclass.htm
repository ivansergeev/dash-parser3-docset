<html>
<head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html;charset=windows-1251">
    <meta name="keywords" content="">
    <title>Memcached (класс)</title>

</head>

<body bgcolor="#FFFFFF" text="black">


<table border="0" cellspacing="0" cellpadding="2">
  <tr>
    <td>
      
<span style="font-family:Arial; font-size:12pt; color:#000000"><b>Memcached (класс)</b><b>&nbsp;&nbsp;&nbsp;</b><span style="font-family:Arial; font-size:10pt; color:#000000"><b><i>[3.4.2]</i></b></span><span style="font-family:Arial; font-size:12pt; color:#000000"><b>
<br>
</b></span></span>
    </td>
  </tr>
  <tr><td bgcolor="#99D228" height="3"></td></tr>
</table>
<br>



<span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">Класс предназначен для работы с серверами <span style="font-family:FreeSetC,Arial; font-size:10pt; color:#0000FF"><u><a href="http://memcached.org/" target="_blank">memcached</a></u></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000"> и использует библиотеку <span style="font-family:FreeSetC,Arial; font-size:10pt; color:#0000FF"><u><a href="http://libmemcached.org/" target="_blank">libmemcached</a></u></span></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">.
<br>

<br>
</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000"><b>Пример
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">Небольшой класс, реализующий функционал, аналогичный функционалу оператора <a href=opcache.htm>cache</a>, но хранящий скешированные резальтаты на сервере memcached:</span><span style="font-family:FreeSetC,Arial; font-size:12pt; color:#000000"><b>
<br>
</b></span><span style="font-family:FreeSetC,Arial; font-size:10pt; color:#000000">
<br>
</span><span style="font-family:Monospace; font-size:10pt; color:#000000"><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>@main[]
<br>
$m[^mcache::open[localhost]]
<br>
^m.cache[key2;10]{dt:&nbsp;$d[^date::now[]]&nbsp;^d.sql-string[]&nbsp;^sleep(3)}
<br>

<br>

<br>

<br>
@CLASS
<br>
mcache
<br>

<br>

<br>
@auto[]
<br>
$timeout(4)&nbsp;^rem{</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;timeout,&nbsp;seconds&nbsp;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}
<br>
$retry_on_timeout(false)&nbsp;^rem{</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;retry&nbsp;cache&nbsp;lock&nbsp;attempts&nbsp;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}
<br>

<br>

<br>
@open[connect-options]
<br>
$m[^memcached::open[$connect-options]]
<br>

<br>

<br>
@cache[key;expires;code][lock;i]
<br>
$result[$m.$key]
<br>
^if(!def&nbsp;$result){
<br>
&nbsp;&nbsp;&nbsp;^rem{</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;not&nbsp;cached&nbsp;yet&nbsp;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}
<br>
&nbsp;&nbsp;&nbsp;$lock[${key}-lock]
<br>
&nbsp;&nbsp;&nbsp;^while(!^m.add[$lock;&nbsp;$.value[$timeout]&nbsp;$.expires($timeout)]){
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^rem{</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;another&nbsp;process&nbsp;got&nbsp;the&nbsp;lock,&nbsp;waiting&nbsp;...&nbsp;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^for[i](1;$timeout*5){
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^sleep(0.2)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result[$m.$key]
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^if(def&nbsp;$result){^break[]}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^if(def&nbsp;$result){
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^break[]
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^if(!$retry_on_timeout){
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^throw[$self.CLASS_NAME;Timeout&nbsp;while&nbsp;getting&nbsp;lock&nbsp;for&nbsp;key&nbsp;'$key']
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;^if(!def&nbsp;$result){
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^rem{</b></span></span><span style="font-family:Monospace; font-size:10pt; color:#000000"><b>&nbsp;we&nbsp;got&nbsp;the&nbsp;lock,&nbsp;processing&nbsp;the&nbsp;code&nbsp;</b><span style="font-family:Monospace; font-size:10pt; color:#0000FF"><b>}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^try{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result[$code]
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$m.[$key][&nbsp;$.value[$result]&nbsp;$.expires($expires)&nbsp;]
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}{}{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^m.delete[$lock]
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;}
<br>
}
<br>
</b></span></span></span><br>


<hr size=1>
<table border="0" cellspacing="0" cellpadding="0" width="100%">
<tr valign="top">
<td><font size="1">Copyright &copy; 1997&#150;2013 Art. Lebedev Studio | <a href="http://www.artlebedev.ru/" target="_blank">http://www.artlebedev.ru</a></font></td>
<td align="right"><font size="1">Дата обновления: 18.06.2012</font></td>
</tr>
</table>
</body>
</html>
